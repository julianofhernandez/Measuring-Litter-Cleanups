<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='TrashMap' inline='true' name='federated.1grazbv1ifzgrk11gq3pe0innj9a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TrashMap' name='semistructpassivestore-direct.1glyice1ghzier190gyhg1blqf53'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/julianhe/source/repos/Litter-Detection/data/Parking Structure Clean up 11-26' filename='TrashMap.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[TrashMap.json]'>
                  <map key='value' value='true' />
                  <map key='value.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.1glyice1ghzier190gyhg1blqf53' name='TrashMap.json' table='[TrashMap.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.1glyice1ghzier190gyhg1blqf53' name='TrashMap.json' table='[TrashMap.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[TrashMap.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[TrashMap.json]</parent-name>
            <remote-alias>category</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[TrashMap.json]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[TrashMap.json]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path</remote-name>
            <remote-type>130</remote-type>
            <local-name>[path]</local-name>
            <parent-name>[TrashMap.json]</parent-name>
            <remote-alias>path</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per TrashMap.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at TrashMap.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per value.Value]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)],[value Index (generated)] : COUNTD([value.Value Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at value.Value level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per value]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([value Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at value level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='TrashMap.json' datatype='table' name='[__tableau_internal_object_id__].[TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>category</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Path' datatype='string' name='[path]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>path</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Value' datatype='string' name='[value]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>value.Value.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Trash Map' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[category]' type='field' />
        <folder-item name='[path]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Trash Map'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[category]' type='field' />
          <folder-item name='[path]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Recycling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Compost&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hazardous&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Garbage&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='TrashMap.json' id='TrashMap.json_3E6DCDC8A9C74F37B63E23EB145218FF'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1glyice1ghzier190gyhg1blqf53' name='TrashMap.json' table='[TrashMap.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='TrashMap' name='federated.1grazbv1ifzgrk11gq3pe0innj9a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1grazbv1ifzgrk11gq3pe0innj9a'>
            <column-instance column='[path]' derivation='Attribute' name='[attr:path:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>category</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Path' datatype='string' name='[path]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>path</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:longitude:qk]' field-type='quantitative' max='-13516148.051184487' min='-13516639.083366763' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:latitude:qk]' field-type='quantitative' max='4658864.9293118287' min='4658545.4921851633' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]' />
              <lod column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[attr:path:nk]' />
              <geometry column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:latitude:qk]</rows>
        <cols>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{8CA4B4A4-DDBC-4D2C-A3B2-60ECF047E480}' />
    </worksheet>
    <worksheet name='Totals'>
      <table>
        <view>
          <datasources>
            <datasource caption='TrashMap' name='federated.1grazbv1ifzgrk11gq3pe0innj9a' />
          </datasources>
          <datasource-dependencies datasource='federated.1grazbv1ifzgrk11gq3pe0innj9a'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>category</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[category]' derivation='Count' name='[cnt:category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Garbage&quot;</bucket>
              <bucket>&quot;Recycling&quot;</bucket>
              <bucket>&quot;Compost&quot;</bucket>
              <bucket>&quot;Hazardous&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]' />
              <size column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[cnt:category:qk]' />
              <text column='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[cnt:category:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F562F5EF-1A57-4EEE-8682-C73E4BB9EA55}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[attr:path:nk]</field>
            <field>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]</field>
            <field>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:path:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6D2FE4C-6DA0-4CDC-A131-BE7CC30F5383}' />
    </window>
    <window class='worksheet' maximized='true' name='Totals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[cnt:category:qk]' type='size' />
          </strip>
          <strip size='211'>
            <card pane-specification-id='0' param='[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1grazbv1ifzgrk11gq3pe0innj9a].[none:category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D643F1F-4A1F-4B8C-BBB1-791CA5FE7B96}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Totals' width='164'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
